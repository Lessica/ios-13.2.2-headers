/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CLGyroCalibrationDatabaseAdapter : CLNotifierServiceAdapter <CLGyroCalibrationDatabaseProtocol>

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic) bool valid;

+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;
+ (id)getSilo;
+ (bool)isSupported;
+ (void)performSyncOnSilo:(id)arg1 invoker:(id /* block */)arg2;

- (struct CLGyroCalibrationDatabase { int (**x1)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; id x3; id x4; /* Warning: Unrecognized filer type: 'm' using 'void*' */ void*x5; void*x6; void*x7; void*x8; int x9; in void*x10; void*x11; void*x12; unsigned char x13; unsigned long x14; inout out void*x15; int x16; float x17; int x18; void*x19; const void*x20; unsigned char x21; unsigned long x22; void*x23; void*x24; const out unsigned char x25; void*x26; long x27; int x28; unsigned int x29/* : ? */; const void*x30; void*x31; int x32; out in long doublex33; void*x34; }*)adaptee;
- (void)beginService;
- (void)doAsync:(id /* block */)arg1;
- (void)doAsync:(id /* block */)arg1 withReply:(id /* block */)arg2;
- (void)dumpDatabase:(id)arg1 onCompletion:(id /* block */)arg2;
- (void)endService;
- (id)init;
- (void)startFactoryGYTT;
- (bool)syncgetBiasFit:(struct { int x1; double x2; union { struct { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; } x_1_2_1; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; } x_1_2_2; } x_3_1_1; struct { bool x_2_2_1; BOOL x_2_2_2[246]; } x_3_1_2; } x3; }*)arg1;
- (bool)syncgetDoSync:(id /* block */)arg1;
- (bool)syncgetGyroStatsWithBias:(struct { float x1; float x2; float x3; }*)arg1 slope:(struct { float x1; float x2; float x3; }*)arg2 l2Error:(struct { float x1; float x2; float x3; }*)arg3 isDynamic:(bool)arg4 deltaBias:(struct { float x1; float x2; float x3; }*)arg5 deltaSlope:(struct { float x1; float x2; float x3; }*)arg6 deltaError:(struct { float x1; float x2; float x3; }*)arg7 isDeltaDynamic:(bool)arg8;
- (bool)syncgetInsertWithBias:(const struct { float x1; float x2; float x3; }*)arg1 variance:(const struct { float x1; float x2; float x3; }*)arg2 temperature:(float)arg3 timestamp:(double)arg4;
- (double)syncgetLastMiniCalibration;
- (int)syncgetMaxDynamicTemperature;
- (int)syncgetNonFactoryRoundCount;
- (int)syncgetNumTemperatures;
- (bool)syncgetSupportsMiniCalibration;
- (bool)syncgetWipeDatabase;

@end
