/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RenderBox.framework/RenderBox
 */

@interface RBDevice : NSObject {
    struct refcounted_ptr<RB::Device> { 
        struct Device {} *_p; 
    }  _device;
    struct atomic<unsigned int> { 
        unsigned int __a_; 
    }  _pending_collect;
    struct objc_ptr<NSObject<OS_dispatch_queue> *> { 
        NSObject<OS_dispatch_queue> *_p; 
    }  _queue;
}

@property (nonatomic, readonly) <MTLCaptureScope> *captureScope;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) struct Device { int (**x1)(); unsigned int x2; struct objc_ptr<id<MTLDevice> > { id x_3_1_1; struct objc_ptr<id<MTLLibrary> > { id x_2_2_1; struct objc_ptr<id<MTLCommandQueue> > { id x_2_3_1; struct objc_ptr<id<MTLCaptureScope> > { id x_2_4_1; struct BufferRegion { struct Buffer {} *x_2_5_1; unsigned long long x_2_5_2; unsigned long long x_2_5_3; } x_2_4_2; struct BufferRegion { struct Buffer {} *x_3_5_1; unsigned long long x_3_5_2; unsigned long long x_3_5_3; } x_2_4_3; struct BufferRegion { struct Buffer {} *x_4_5_1; unsigned long long x_4_5_2; unsigned long long x_4_5_3; } x_2_4_4; struct objc_ptr<id<MTLTexture> > { id x_5_5_1; unsigned int x_5_5_2; unsigned int x_5_5_3; unsigned int x_5_5_4; unsigned long long x_5_5_5; unsigned long long x_5_5_6; struct Heap { unsigned long long x_7_6_1; struct Page {} *x_7_6_2; char *x_7_6_3; unsigned long long x_7_6_4; } x_5_5_7; /* Warning: unhandled struct encoding: '{list<RB::refcounted_ptr<RB::Buffer>' */ struct x_5_5_8; } x_2_4_5; } x_2_3_2; } x_2_2_2; } x_3_1_2; } x3; }*rb_device; /* unknown property attribute:  std::__1::default_delete<RB::GlyphPathCache> >=^{GlyphPathCache}}}^{CGGlyphLock}} */

+ (bool)isSupported;
+ (id)sharedDefaultDevice;
+ (id)sharedDevice:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureScope;
- (void)collectResources;
- (void)dealloc;
- (id)device;
- (id)initWithDevice:(id)arg1;
- (id)queue;
- (struct Device { int (**x1)(); unsigned int x2; struct objc_ptr<id<MTLDevice> > { id x_3_1_1; struct objc_ptr<id<MTLLibrary> > { id x_2_2_1; struct objc_ptr<id<MTLCommandQueue> > { id x_2_3_1; struct objc_ptr<id<MTLCaptureScope> > { id x_2_4_1; struct BufferRegion { struct Buffer {} *x_2_5_1; unsigned long long x_2_5_2; unsigned long long x_2_5_3; } x_2_4_2; struct BufferRegion { struct Buffer {} *x_3_5_1; unsigned long long x_3_5_2; unsigned long long x_3_5_3; } x_2_4_3; struct BufferRegion { struct Buffer {} *x_4_5_1; unsigned long long x_4_5_2; unsigned long long x_4_5_3; } x_2_4_4; struct objc_ptr<id<MTLTexture> > { id x_5_5_1; unsigned int x_5_5_2; unsigned int x_5_5_3; unsigned int x_5_5_4; unsigned long long x_5_5_5; unsigned long long x_5_5_6; struct Heap { unsigned long long x_7_6_1; struct Page {} *x_7_6_2; char *x_7_6_3; unsigned long long x_7_6_4; } x_5_5_7; struct list<RB::refcounted_ptr<RB::Buffer>, std::__1::allocator<RB::refcounted_ptr<RB::Buffer> > > { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> {} *x_1_7_1; struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> {} *x_1_7_2; } x_8_6_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Buffer>, void *> > > { unsigned long long x_2_7_1; } x_8_6_2; } x_5_5_8; struct list<RB::refcounted_ptr<RB::Texture>, std::__1::allocator<RB::refcounted_ptr<RB::Texture> > > { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> {} *x_1_7_1; struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> {} *x_1_7_2; } x_9_6_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Texture>, void *> > > { unsigned long long x_2_7_1; } x_9_6_2; } x_5_5_9; } x_2_4_5; } x_2_3_2; } x_2_2_2; } x_3_1_2; } x3; }*)rb_device;

@end
