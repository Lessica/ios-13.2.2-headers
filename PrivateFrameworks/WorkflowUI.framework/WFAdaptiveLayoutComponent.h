/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowUI.framework/WorkflowUI
 */

@interface WFAdaptiveLayoutComponent : CKComponent {
    /* Warning: unhandled struct encoding: '{vector<CKComponent *, std::__1::allocator<CKComponent *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> >="__value_"^@}}' */ struct vector<CKComponent *, std::__1::allocator<CKComponent *> > { 
        __end_ **__begin_; 
    }  _children;
}

+ (id)newWithChildren:(const struct vector<CKComponent *, std::__1::allocator<CKComponent *> > { id *x1; id x2; /* Warning: Unrecognized filer type: '_' using 'void*' */ void*x3; void*x4; BOOL x5; out void*x6; void*x7; const void*x8; short x9; short x10; void*x11; double x12; void*x13; void*x14; void*x15; int x16; const void*x17; unsigned char x18; void*x19; unsigned char x20; out void*x21; void*x22; out in void*x23; in void*x24; void*x25; char *x26; void*x27; void*x28; short x29; void*x30; const out in void*x31; void*x32; char *x33; void*x34; void*x35; short x36; void*x37; double x38; SEL x39; SEL x40; void*x41; void*x42; void*x43; SEL x44; SEL x45; void*x46; long x47; long x48; out BOOL x49; void*x50; void*x51; out const void*x52; unsigned char x53; void*x54; unsigned char x55; out void*x56; void*x57; out in void*x58; in void*x59; void*x60; char *x61; void*x62; void*x63; void*x64; void*x65; id *x66; }*)arg1 size:(const struct CKComponentSize { struct CKRelativeDimension { int x_1_1_1; double x_1_1_2; } x1; struct CKRelativeDimension { int x_2_1_1; double x_2_1_2; } x2; struct CKRelativeDimension { int x_3_1_1; double x_3_1_2; } x3; struct CKRelativeDimension { int x_4_1_1; double x_4_1_2; } x4; struct CKRelativeDimension { int x_5_1_1; double x_5_1_2; } x5; struct CKRelativeDimension { int x_6_1_1; double x_6_1_2; } x6; }*)arg2;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CKComponentLayout { id x1; unsigned char x2; /* Warning: Unrecognized filer type: 'G' using 'void*' */ void*x3; unsigned short x4; int x5; void*x6; void*x7; void*x8; double x9; double x10; })computeLayoutThatFits:(struct CKSizeRange { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

@end
