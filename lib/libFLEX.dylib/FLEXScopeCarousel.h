/* Generated by RuntimeBrowser
   Image: /Library/MobileSubstrate/DynamicLibraries/libFLEX.dylib
 */

@interface FLEXScopeCarousel : UIControl <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout> {
    UICollectionView * _collectionView;
    bool  _constraintsInstalled;
    NSMutableArray * _dynamicTypeHandlers;
    id  _dynamicTypeObserver;
    NSLayoutConstraint * _heightConstraint;
    NSArray * _items;
    long long  _selectedIndex;
    id /* block */  _selectedIndexChangedAction;
    FLEXCarouselCell * _sizingCell;
}

@property (nonatomic, readonly) UICollectionView *collectionView;
@property (nonatomic) bool constraintsInstalled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSMutableArray *dynamicTypeHandlers;
@property (nonatomic, readonly) id dynamicTypeObserver;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSLayoutConstraint *heightConstraint;
@property (nonatomic, copy) NSArray *items;
@property (nonatomic) long long selectedIndex;
@property (nonatomic, copy) id /* block */ selectedIndexChangedAction;
@property (nonatomic, readonly) FLEXCarouselCell *sizingCell;
@property (readonly) Class superclass;

+ (bool)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)constraintsInstalled;
- (void)dealloc;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)dynamicTypeHandlers;
- (id)dynamicTypeObserver;
- (id)heightConstraint;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)items;
- (void)registerBlockForDynamicTypeChanges:(id /* block */)arg1;
- (long long)selectedIndex;
- (id /* block */)selectedIndexChangedAction;
- (void)setConstraintsInstalled:(bool)arg1;
- (void)setItems:(id)arg1;
- (void)setSelectedIndex:(long long)arg1;
- (void)setSelectedIndexChangedAction:(id /* block */)arg1;
- (id)sizingCell;
- (void)updateConstraints;

@end
