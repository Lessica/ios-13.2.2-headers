/* Generated by RuntimeBrowser
   Image: /Library/MobileSubstrate/DynamicLibraries/libFLEX.dylib
 */

@interface FLEXNetworkObserver : NSObject {
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableDictionary * _requestStatesForRequestIDs;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSMutableDictionary *requestStatesForRequestIDs;

+ (id /* block */)asyncCompletionWrapperForRequestID:(id)arg1 mechanism:(id)arg2 completion:(id /* block */)arg3;
+ (void)injectDataTaskDidBecomeDownloadTaskIntoDelegateClass:(Class)arg1;
+ (void)injectDidFailWithErrorIntoDelegateClass:(Class)arg1;
+ (void)injectDidFinishLoadingIntoDelegateClass:(Class)arg1;
+ (void)injectDidReceiveDataIntoDelegateClass:(Class)arg1;
+ (void)injectDidReceiveResponseIntoDelegateClass:(Class)arg1;
+ (void)injectDownloadTaskDidFinishDownloadingIntoDelegateClass:(Class)arg1;
+ (void)injectDownloadTaskDidWriteDataIntoDelegateClass:(Class)arg1;
+ (void)injectIntoAllNSURLConnectionDelegateClasses;
+ (void)injectIntoDelegateClass:(Class)arg1;
+ (void)injectIntoNSURLConnectionAsynchronousClassMethod;
+ (void)injectIntoNSURLConnectionCancel;
+ (void)injectIntoNSURLConnectionSynchronousClassMethod;
+ (void)injectIntoNSURLSessionAsyncDataAndDownloadTaskMethods;
+ (void)injectIntoNSURLSessionAsyncUploadTaskMethods;
+ (void)injectIntoNSURLSessionTaskResume;
+ (void)injectRespondsToSelectorIntoDelegateClass:(Class)arg1;
+ (void)injectTaskDidCompleteWithErrorIntoDelegateClass:(Class)arg1;
+ (void)injectTaskDidReceiveDataIntoDelegateClass:(Class)arg1;
+ (void)injectTaskDidReceiveResponseIntoDelegateClass:(Class)arg1;
+ (void)injectTaskWillPerformHTTPRedirectionIntoDelegateClass:(Class)arg1;
+ (void)injectWillSendRequestIntoDelegateClass:(Class)arg1;
+ (bool)isEnabled;
+ (void)load;
+ (id)mechanismFromClassMethod:(SEL)arg1 onClass:(Class)arg2;
+ (id)nextRequestID;
+ (id)requestIDForConnectionOrTask:(id)arg1;
+ (void)setEnabled:(bool)arg1;
+ (void)setRequestID:(id)arg1 forConnectionOrTask:(id)arg2;
+ (id)sharedObserver;
+ (void)sniffWithoutDuplicationForObject:(id)arg1 selector:(SEL)arg2 sniffingBlock:(id /* block */)arg3 originalImplementationBlock:(id /* block */)arg4;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3 delegate:(id)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 delegate:(id)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(id /* block */)arg4 delegate:(id)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 delegate:(id)arg6;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 delegate:(id)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishDownloadingToURL:(id)arg3 data:(id)arg4 delegate:(id)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id /* block */)arg5 delegate:(id)arg6;
- (void)URLSessionTaskWillResume:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2 delegate:(id)arg3;
- (void)connection:(id)arg1 didReceiveData:(id)arg2 delegate:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2 delegate:(id)arg3;
- (void)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 delegate:(id)arg4;
- (void)connectionDidFinishLoading:(id)arg1 delegate:(id)arg2;
- (void)connectionWillCancel:(id)arg1;
- (id)init;
- (void)performBlock:(id /* block */)arg1;
- (id)queue;
- (void)removeRequestStateForRequestID:(id)arg1;
- (id)requestStateForRequestID:(id)arg1;
- (id)requestStatesForRequestIDs;
- (void)setQueue:(id)arg1;
- (void)setRequestStatesForRequestIDs:(id)arg1;

@end
