/* Generated by RuntimeBrowser
   Image: /Library/MobileSubstrate/DynamicLibraries/1feaks.dylib
 */

@interface SIAlertViewÊèíÊèíÂ§¥xxtÈó∑Â£∞Èò≤Â§ßÂÜ≤Á™Å : UIView {
    UIWindow * _alertWindow;
    long long  _backgroundStyle;
    UIColor * _buttonColor;
    UIFont * _buttonFont;
    NSMutableArray * _buttons;
    long long  _buttonsListStyle;
    UIColor * _cancelButtonColor;
    UIView * _containerView;
    double  _cornerRadius;
    UIColor * _destructiveButtonColor;
    id /* block */  _didDismissHandler;
    id /* block */  _didShowHandler;
    bool  _enabledParallaxEffect;
    NSMutableArray * _items;
    bool  _layoutDirty;
    NSString * _message;
    UIColor * _messageColor;
    UIFont * _messageFont;
    UILabel * _messageLabel;
    UIWindow * _oldKeyWindow;
    long long  _oldTintAdjustmentMode;
    double  _shadowRadius;
    NSString * _title;
    UIColor * _titleColor;
    UIFont * _titleFont;
    UILabel * _titleLabel;
    long long  _transitionStyle;
    UIColor * _viewBackgroundColor;
    bool  _visible;
    id /* block */  _willDismissHandler;
    id /* block */  _willShowHandler;
}

@property (nonatomic, retain) UIWindow *alertWindow;
@property (nonatomic) long long backgroundStyle;
@property (nonatomic, retain) UIColor *buttonColor;
@property (nonatomic, retain) UIFont *buttonFont;
@property (nonatomic, retain) NSMutableArray *buttons;
@property (nonatomic) long long buttonsListStyle;
@property (nonatomic, retain) UIColor *cancelButtonColor;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic) double cornerRadius;
@property (nonatomic, retain) UIColor *destructiveButtonColor;
@property (nonatomic, copy) id /* block */ didDismissHandler;
@property (nonatomic, copy) id /* block */ didShowHandler;
@property (getter=isParallaxEffectEnabled, nonatomic, readonly) bool enabledParallaxEffect;
@property (nonatomic, retain) NSMutableArray *items;
@property (getter=isLayoutDirty, nonatomic) bool layoutDirty;
@property (nonatomic, copy) NSString *message;
@property (nonatomic, retain) UIColor *messageColor;
@property (nonatomic, retain) UIFont *messageFont;
@property (nonatomic, retain) UILabel *messageLabel;
@property (nonatomic) UIWindow *oldKeyWindow;
@property (nonatomic) long long oldTintAdjustmentMode;
@property (nonatomic) double shadowRadius;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) UIColor *titleColor;
@property (nonatomic, retain) UIFont *titleFont;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic) long long transitionStyle;
@property (nonatomic, retain) UIColor *viewBackgroundColor;
@property (getter=isVisible, nonatomic) bool visible;
@property (nonatomic, copy) id /* block */ willDismissHandler;
@property (nonatomic, copy) id /* block */ willShowHandler;

+ (id)currentAlertView;
+ (void)hideBackgroundAnimated:(bool)arg1;
+ (void)initialize;
+ (bool)isAnimating;
+ (void)setAnimating:(bool)arg1;
+ (void)setCurrentAlertView:(id)arg1;
+ (id)sharedQueue;
+ (void)showBackground;

- (void).cxx_destruct;
- (void)addButtonWithTitle:(id)arg1 type:(long long)arg2 handler:(id /* block */)arg3;
- (void)addParallaxEffect;
- (id)alertWindow;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (long long)backgroundStyle;
- (void)buttonAction:(id)arg1;
- (id)buttonColor;
- (id)buttonFont;
- (id)buttonForItemIndex:(unsigned long long)arg1;
- (id)buttons;
- (long long)buttonsListStyle;
- (id)cancelButtonColor;
- (id)containerView;
- (double)cornerRadius;
- (id)destructiveButtonColor;
- (id /* block */)didDismissHandler;
- (id /* block */)didShowHandler;
- (void)dismissAnimated:(bool)arg1;
- (void)dismissAnimated:(bool)arg1 cleanup:(bool)arg2;
- (double)heightForMessageLabel;
- (double)heightForTitleLabel;
- (id)init;
- (id)initWithTitle:(id)arg1 andMessage:(id)arg2;
- (void)invalidateLayout;
- (bool)isLayoutDirty;
- (bool)isParallaxEffectEnabled;
- (bool)isVisible;
- (id)items;
- (void)layoutSubviews;
- (id)message;
- (id)messageColor;
- (id)messageFont;
- (id)messageLabel;
- (id)oldKeyWindow;
- (long long)oldTintAdjustmentMode;
- (double)preferredHeight;
- (void)removeParallaxEffect;
- (void)resetTransition;
- (void)setAlertWindow:(id)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setButtonColor:(id)arg1;
- (void)setButtonFont:(id)arg1;
- (void)setButtonImage:(id)arg1 forState:(unsigned long long)arg2 andButtonType:(long long)arg3;
- (void)setButtons:(id)arg1;
- (void)setButtonsListStyle:(long long)arg1;
- (void)setCancelButtonColor:(id)arg1;
- (void)setCancelButtonImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setColor:(id)arg1 toButtonsOfType:(long long)arg2;
- (void)setContainerView:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDefaultButtonImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setDestructiveButtonColor:(id)arg1;
- (void)setDestructiveButtonImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setDidDismissHandler:(id /* block */)arg1;
- (void)setDidShowHandler:(id /* block */)arg1;
- (void)setItems:(id)arg1;
- (void)setLayoutDirty:(bool)arg1;
- (void)setMessage:(id)arg1;
- (void)setMessageColor:(id)arg1;
- (void)setMessageFont:(id)arg1;
- (void)setMessageLabel:(id)arg1;
- (void)setOldKeyWindow:(id)arg1;
- (void)setOldTintAdjustmentMode:(long long)arg1;
- (void)setShadowRadius:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleColor:(id)arg1;
- (void)setTitleFont:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTransitionStyle:(long long)arg1;
- (void)setViewBackgroundColor:(id)arg1;
- (void)setVisible:(bool)arg1;
- (void)setWillDismissHandler:(id /* block */)arg1;
- (void)setWillShowHandler:(id /* block */)arg1;
- (void)setup;
- (void)setupButtons;
- (void)setupContainerView;
- (double)shadowRadius;
- (void)show;
- (void)teardown;
- (id)title;
- (id)titleColor;
- (id)titleFont;
- (id)titleLabel;
- (void)transitionInCompletion:(id /* block */)arg1;
- (void)transitionOutCompletion:(id /* block */)arg1;
- (long long)transitionStyle;
- (void)updateMessageLabel;
- (void)updateTitleLabel;
- (void)validateLayout;
- (id)viewBackgroundColor;
- (id /* block */)willDismissHandler;
- (id /* block */)willShowHandler;

@end
